We have a product that simulates the behavior of land developers in
an abstract way. One of the things developers do is buy a big piece of
land and apply for permission to subdivide that land, so that they can
build houses on the best part of the land, and leave the rest of the
land vacant for future consideration.

Inside of a postGIS function, we'd like to divide a polygon into two
pieces, a piece on the exterior edge that is closest to the nearest
road, and the remainder.  The piece has a specified size, and we will
use east-west and north-south lines to divide it off, so that it will be
roughly rectangular if the original polygon is rectangular.  The algorithm
should have a signature like this:

h_pseduo_parcel(polygon_layer_name varchar, unique_id_of_polygon bigint,
area_of_rectangle double precision, road_layer_name varchar)

and the algorithm would be similar to this (see picture at
https://www.dropbox.com/s/5t085nvpwxa25jk/PolygonCorner.jpeg?dl=0 ):

1) find the parcel's exterior ring(s) northernmost point(s), easternmost
point(s), westernmost point(s) and southernmost point(s).

2) if a separate road layer is provided, determine which of the
four (sets) of points identified in step 1 are closest to any road,
and identify a single point on each compass side that is closest
to any road (pick any of the set if there are still ties, e.g. if a
true-north boundary is parallel to a true-north road.).  If no road
layer is provided, the compass direction to use will be specified as
a parameter of the function in an alternate signature, and if an edge
consists of a true-north line or true-west line, pick any of the edge
points to continue.

(For the rest of this description, I'm going to assume that the
northernmost points were closest to a road.  Rotate the problem for the
general case.)

3) take the square root of the area_of_rectangle parameter and draw an
east-west line inset into the polygon by that amount, as a first guess
as to how far south the subdivision line should be.

4) it could happen that the parcel is pointy at the north end or not much
bigger than area_of_rectangle, so check if the northern part selected by
the east-west subdivision line is smaller than the 0.9*area_of_rectangle.
If it is, use a bisection search method to move the east-west line
further south until the northern part is the desired area, then skip
steps 5 and 6 and finish up (step 7).

5) figure out whether we should work from the north-east corner or from
the north-west corner, by determining whether the easternmost point
that is closest to a road is closer to a road than the westernmost
point that is closest to a road, in which case work from the east side,
cutting off the north-east corner.  Otherwise, work from the west side,
cutting off the north-west corner.

6) using the bisection method, search for a north-south subdivision line
that gives us the parcel that matches our area.

7) now, insert a new polygon into the polygon layer, which is the part
of the original polygon that matches our specified area, to the north of
our east-west line from step 4 and to the west or east of our north-south
line from step 6 (if any).  (The uniqueid will be generated by insert).

8) update the original polygon, to be the remaining polygon area.

9) return the uniqueid of the new polygon from step 7.
